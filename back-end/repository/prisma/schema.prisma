// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Member {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  email        String      @unique
  phoneNumber  String      @unique
  password     String
  profile      Profile     @relation(fields: [profileId], references: [id])
  profileId    Int         @unique
  membership   Membership  @relation(fields: [membershipId], references: [id])
  membershipId Int         @unique
  payments     Payment[]
  attendance   Attendance[]  @relation("MemberAttendances")
}

model Membership {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  endDate    DateTime
  type       String
  member     Member?
}

model Profile {
  id       Int     @id @default(autoincrement())
  name     String
  surname  String
  height   Float
  weight   Float
  member   Member?
}

model Payment {
  id            Int      @id @default(autoincrement())
  amount        Float
  date          DateTime @default(now())
  dueDate       DateTime
  paymentStatus Boolean  @default(false)
  member        Member   @relation(fields: [memberId], references: [id])
  memberId      Int
}

model Trainer {
  id              Int      @id @default(autoincrement())
  name            String
  availability    Boolean
  language_spoken String
  attendances     Attendance[] @relation("TrainerAttendances")
}

model Attendance {
  id                   Int      @id @default(autoincrement())
  attendance_tracking  Boolean
  trainerId            Int
  trainer              Trainer  @relation("TrainerAttendances", fields: [trainerId], references: [id])
  memberId             Int
  member               Member   @relation("MemberAttendances", fields: [memberId], references: [id])
}
